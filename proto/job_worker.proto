syntax = "proto3";

import "google/protobuf/timestamp.proto";

// JobWorker service provides methods to manage jobs.
service JobWorker {
  // Starts a new job with the given command and arguments.
  rpc Start(JobStartRequest) returns (JobStartResponse) {}

  // Stops the job with the given ID.
  rpc Stop(JobStopRequest) returns (JobStopResponse) {}

  // Gets the status of the job with the given ID.
  rpc Status(JobStatusRequest) returns (JobStatusResponse) {}

  // Streams the logs of the job with the given ID.
  rpc Logs(JobLogsRequest) returns (stream JobLogsResponse) {}
}

// Request to start a new job.
message JobStartRequest {
  string command = 1;  // command to be executed
  repeated string args = 2;  // arguments for the command
}

// Response after starting a job.
message JobStartResponse {
  string id = 1; // unique identifier for the job
  JobStatusEnum status = 2;  // status of the job
}

// Request to stop a job.
message JobStopRequest {
  string id = 1;  // unique identifier of the job
}

// Response after stopping a job.
message JobStopResponse {
  string id = 1; // unique identifier for the job
  JobStatusEnum status = 2;  // status of the job
}

// Request to get the status of a job.
message JobStatusRequest {
  string id = 1;  // unique identifier of the job
}

// Response with the status of a job.
message JobStatusResponse {
  string id = 1;
  JobStatusEnum status = 2;
  string command = 3;  // command of the job
  repeated string args = 4;  // arguments of the job
}

// Request to get the logs of a job.
message JobLogsRequest {
  string id = 1;  // unique identifier of the job
}

// Response with a log message from a job.
message JobLogsResponse {
  google.protobuf.Timestamp timestamp = 1;  // timestamp of the log message
  bytes log = 2;  // log message
}

// Possible statuses of a job.
enum JobStatusEnum {
  JOB_STATUS_UNSPECIFIED = 0;
  JOB_STATUS_STARTED = 1;
  JOB_STATUS_RUNNING = 2;
  JOB_STATUS_STOPPED = 3;
  JOB_STATUS_COMPLETED = 4;
}